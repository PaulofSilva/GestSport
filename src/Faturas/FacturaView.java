/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClienteView.java
 *
 * Created on 17/Dez/2011, 4:07:00
 */
package Faturas;

import Artigos.Artigo;
import Artigos.ArtigoDAL;

//import java.sql.Date;
import Clientes.Cliente;
import Clientes.ClienteDAL;
import Connect.ConnectDB;
import Funcionario.Funcionario;
import Funcionario.FuncionarioDAL;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;

import java.sql.Date;
import java.sql.SQLException;
import java.util.ArrayList;

import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Paulo Silva
 */
public class FacturaView extends javax.swing.JFrame
{

    FuncionarioDAL fuDal;
    FacturaDAL ftDal;
    ArrayList<Factura> ft = new ArrayList<Factura>();
    DefaultTableModel modelo;
    boolean eNovo;
    int indice;
    //Date hoje = new Date();
    java.util.Date hoje = new java.util.Date();
    String hj = String.format("%1$tY-%1$tm-%1$td", hoje);
    Date data = Date.valueOf(hj);
    double totalVenda = 0;

    /** Creates new form ClienteView */
    public FacturaView()
    {
        initComponents();
        URL url = this.getClass().getResource("/imagens/book_48.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);



        eNovo = false;
        fuDal = new FuncionarioDAL();
        ftDal = new FacturaDAL();

        mudaEstado(false);

        ArrayList<Funcionario> func = fuDal.SelectAll();
        for (Funcionario fu : func)
        {
            jcbFuncionario.addItem(fu);
        }

        String[] colunas =
        {
            "CodArtigo", "designcao", "Quant", "preco", "iva", "Total"
        };
        modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(colunas);
        jTableLinhas.setModel(modelo);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNovo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnGravar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtNumVenda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCodCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jcbFuncionario = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtMorada = new javax.swing.JTextField();
        txtCodPostal = new javax.swing.JTextField();
        txtNIF = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLinhas = new javax.swing.JTable();
        txtCodArtigo = new javax.swing.JTextField();
        txtDesign = new javax.swing.JTextField();
        txtPreco = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnInserir = new javax.swing.JButton();
        txtQuant = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTotalFact = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Facturação");
        setIconImages(null);
        setName("frmFactura"); // NOI18N
        setResizable(false);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/add_48.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cancel_48.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGravar.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/accepted_48.png"))); // NOI18N
        btnGravar.setText("Gravar");
        btnGravar.setToolTipText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtNumVenda.setFont(new java.awt.Font("Tahoma", 2, 14));
        txtNumVenda.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel1.setText("FACTURA Nº.:");

        txtData.setEditable(false);
        txtData.setFont(new java.awt.Font("Tahoma", 1, 14));
        txtData.setEnabled(false);

        jLabel2.setText("DATA.:");

        txtCodCliente.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCodCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodClienteFocusLost(evt);
            }
        });

        jLabel3.setText("Cliente.:");

        txtNome.setEditable(false);
        txtNome.setEnabled(false);

        jLabel4.setText("Funcionário.:");

        txtMorada.setEditable(false);
        txtMorada.setEnabled(false);

        txtCodPostal.setEditable(false);
        txtCodPostal.setEnabled(false);

        txtNIF.setEditable(false);
        txtNIF.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(48, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(38, 38, 38)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtNumVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 308, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtNIF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                            .addComponent(txtCodPostal, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addComponent(txtMorada, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel4)
                        .addGap(38, 38, 38)
                        .addComponent(jcbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNumVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMorada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableLinhas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableLinhas.setShowHorizontalLines(false);
        jTableLinhas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLinhasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLinhas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
        );

        txtCodArtigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodArtigoFocusLost(evt);
            }
        });

        txtDesign.setEditable(false);
        txtDesign.setEnabled(false);

        txtPreco.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel5.setText("Cod. Artigo");

        jLabel6.setText("Designação");

        jLabel7.setText("Preço");

        btnInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/add_48.png"))); // NOI18N
        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        txtQuant.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel8.setText("Qtt");

        txtTotalFact.setEditable(false);
        txtTotalFact.setFont(new java.awt.Font("Tahoma", 1, 24));
        txtTotalFact.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalFact.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtTotalFact.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 2, 24));
        jLabel9.setText("€");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtTotalFact, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                        .addComponent(btnCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(55, 55, 55))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtCodArtigo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDesign, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtQuant, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnInserir))
                                .addComponent(jLabel7)))
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDesign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodArtigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInserir)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGravar)
                            .addComponent(btnCancelar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotalFact)
                            .addComponent(jLabel9))))
                .addGap(44, 44, 44))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-741)/2, (screenSize.height-630)/2, 741, 630);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnGravarActionPerformed
    {//GEN-HEADEREND:event_btnGravarActionPerformed

        if (ft.isEmpty()) // verifica se tem linhas
        {
            JOptionPane.showMessageDialog(this, "Inclua um produto");
        } else
        {

            if (verificaCliente()) // verifica se tem cliente
            {
                JOptionPane.showMessageDialog(rootPane, "Codigo do Cliente INCORRETO");
                txtCodCliente.requestFocus();
            } else
            {


                // Inserir Cabeçalho
                Funcionario func = (Funcionario) jcbFuncionario.getSelectedItem();
                ftDal.InserirCabFact(func.getCodfuncionario(), Integer.parseInt(txtCodCliente.getText().trim()), data, Double.parseDouble(txtTotalFact.getText().trim()));

                //Inserir Linhas
                for (int i = 0; i < ft.size(); i++)
                {
                    int numVenda = Integer.parseInt(txtNumVenda.getText().trim());
                    String codArt = ft.get(i).getRef();
                    double iva = ft.get(i).getIva();
                    int qtt = ft.get(i).getQuant();
                    double preco = ft.get(i).getPreco();

                    ftDal.actualizarStock(qtt, codArt);
                    ftDal.InserirLinhas(numVenda, codArt, iva, qtt, preco);

                }
                // Limpa ecrã
                JOptionPane.showMessageDialog(this, "Factura Registada com sucesso!");

                int accao = JOptionPane.showConfirmDialog(this, "Pretende imprimir o documento registado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (accao == JOptionPane.YES_OPTION)
                {
                    imprimir(Integer.parseInt(txtNumVenda.getText().trim()));
                }
                mudaEstado(false);
                limparTela();
                txtNumVenda.setText("");
                txtData.setText("");
                ft.clear();
            }
        }

    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelarActionPerformed
    {//GEN-HEADEREND:event_btnCancelarActionPerformed
        mudaEstado(false);
        limparTela();
        txtNumVenda.setText("");
        txtData.setText("");
        ft.clear();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnNovoActionPerformed
    {//GEN-HEADEREND:event_btnNovoActionPerformed
        int ultFact = 1;
        try
        {
            ultFact = ftDal.ultimoFact() + 1;
            txtNumVenda.setText(String.valueOf(ultFact));
        } catch (SQLException ex)
        {
            Logger.getLogger(FacturaView.class.getName()).log(Level.SEVERE, null, ex);
        }

        limparTela();

        btnGravar.setEnabled(true);
        btnCancelar.setEnabled(true);

        mudaEstado(true);
        txtCodCliente.requestFocus();
        eNovo = true;
    }//GEN-LAST:event_btnNovoActionPerformed

    private void txtCodClienteFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_txtCodClienteFocusLost
    {//GEN-HEADEREND:event_txtCodClienteFocusLost
        if (verificaCliente())
        {
            JOptionPane.showMessageDialog(rootPane, "Codigo do Cliente INCORRETO");
            txtCodCliente.requestFocus();
        } else
        {
            mostraCliente(Integer.parseInt(txtCodCliente.getText().trim()));
        }
    }//GEN-LAST:event_txtCodClienteFocusLost

    private void txtCodArtigoFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_txtCodArtigoFocusLost
    {//GEN-HEADEREND:event_txtCodArtigoFocusLost
        mostraArtigo(txtCodArtigo.getText());
    }//GEN-LAST:event_txtCodArtigoFocusLost

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnInserirActionPerformed
    {//GEN-HEADEREND:event_btnInserirActionPerformed
        // Atribuição dos valores que vao ser inseridos no vector de Strings que irá ser inserido na tabela

        if (verificarArtLinha())
        {
            int stock = ftDal.verificarStock(txtCodArtigo.getText()); // verificar o stock de artigo
            if (Integer.parseInt(txtQuant.getText()) > 0)
            {
                if (stock - Integer.parseInt(txtQuant.getText()) >= 0)
                {
                    double totalLinha = 0;
                    totalLinha = (Double.parseDouble(txtPreco.getText().trim()) * Integer.parseInt(txtQuant.getText()) * 0.23
                            + Double.parseDouble(txtPreco.getText().trim()) * Integer.parseInt(txtQuant.getText()));
                    String CodArtigo = txtCodArtigo.getText();
                    String designcao = txtDesign.getText();
                    String quant = txtQuant.getText();
                    String preco = txtPreco.getText();
                    String iva = "23";
                    String Total = String.valueOf(totalLinha);
                    totalVenda += totalLinha;
                    txtTotalFact.setText(String.valueOf(totalVenda));

                    //Adicionar ao array de facturas 
                    Factura f = new Factura();
                    f.setRef(CodArtigo);
                    f.setQuant(Integer.parseInt(quant));
                    f.setPreco(Double.parseDouble(preco));
                    f.setIva(Double.parseDouble(iva));
                    ft.add(f);

                    // Atribuir os valores que vao ser impressos na Tabela para cada produto/linha.
                    String[] campos = new String[]
                    {
                        CodArtigo, designcao, quant, preco, iva, Total
                    };
                    modelo.addRow(campos);
                } else
                {
                    JOptionPane.showMessageDialog(rootPane, "Stock insuficiente! stock actual.: " + stock);
                }

            } else
            {
                JOptionPane.showMessageDialog(rootPane, "Quantidade tem que ser maior que 0..!");
            }

        }
    }//GEN-LAST:event_btnInserirActionPerformed

    private void jTableLinhasMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableLinhasMouseClicked
    {//GEN-HEADEREND:event_jTableLinhasMouseClicked
        removerlinha();
    }//GEN-LAST:event_jTableLinhasMouseClicked

    private void limparTela()
    {

        txtCodArtigo.setText("");
        txtCodCliente.setText("");
        txtCodPostal.setText("");
        txtData.setText(String.valueOf(data));
        txtDesign.setText("");
        txtMorada.setText("");
        txtNIF.setText("");
        txtNome.setText("");
        txtPreco.setText("000.00");
        txtPreco.addKeyListener(new java.awt.event.KeyAdapter()
        {     // cria um listener ouvinte de digitação do fieldNumero  

            @Override
            public void keyReleased(java.awt.event.KeyEvent evt)
            {  // cria um ouvinte para cada tecla pressionada  
                txtPreco.setText(txtPreco.getText().replaceAll("[^0-9 | ^.]", ""));
                // faz com que pegue o texto a cada tecla digitada, e substituir tudo que não(^) seja numero  por ""  
            }
        });
        txtQuant.setText("0");
        txtQuant.addKeyListener(new java.awt.event.KeyAdapter()
        {     // cria um listener ouvinte de digitação do fieldNumero  

            @Override
            public void keyReleased(java.awt.event.KeyEvent evt)
            {  // cria um ouvinte para cada tecla pressionada  
                txtQuant.setText(txtQuant.getText().replaceAll("[^0-9]", ""));
                // faz com que pegue o texto a cada tecla digitada, e substituir tudo que não(^) seja numero  por ""  
            }
        });
        txtTotalFact.setText("0.00");

        while (modelo.getRowCount() > 0)
        {
            modelo.removeRow(0);
        }
    }

    private void mudaEstado(boolean ativo)
    {
        txtCodCliente.setEnabled(ativo);
        txtCodArtigo.setEnabled(ativo);
        txtPreco.setEnabled(ativo);
        txtQuant.setEnabled(ativo);

        btnGravar.setEnabled(ativo);
        btnCancelar.setEnabled(ativo);
        btnInserir.setEnabled(ativo);
    }

    private boolean verificaPreco()
    {
        if (txtPreco.getText().trim().equals(""))
        {
            return true;
        } else
        {
            try
            {
                double valor = Double.parseDouble(txtPreco.getText().trim());
            } catch (Exception e)
            {
                return true;
            }
        }
        return false;
    }

    private boolean verificaCliente()
    {
        if (txtCodCliente.getText().trim().equals(""))
        {
            return true;
        } else
        {
            try
            {
                int nCliente = Integer.parseInt(txtCodCliente.getText().trim());
            } catch (Exception e)
            {
                return true;
            }
        }
        return false;
    }

    private void mostraCliente(int codCli)
    {
        ClienteDAL clDal = new ClienteDAL();
        ArrayList<Cliente> cli = clDal.searchByNome("codCliente", String.valueOf(codCli));
        if (!cli.isEmpty())
        {
            for (Cliente c : cli)
            {
                txtNome.setText(c.getNome());
                txtCodPostal.setText(c.getCodPostal());
                txtMorada.setText(c.getMorada());
                txtNIF.setText(c.getNif());
            }
        } else
        {
            txtNome.setText("");
            txtCodPostal.setText("");
            txtMorada.setText("");
            txtNIF.setText("");
            JOptionPane.showMessageDialog(rootPane, "O Numero de Cliente não existe");
            txtCodCliente.requestFocus();
        }
    }

    private void mostraArtigo(String codArt)
    {
        ArtigoDAL stDal = new ArtigoDAL();
        ArrayList<Artigo> st = stDal.searchByNome("codArtigo", codArt);
        double preco = 0;
        preco = ftDal.verificarPrecoPromo(txtCodArtigo.getText()); // verificar o promo de artigo
        for (Artigo a : st)
        {
            txtDesign.setText(a.getDesignacao());
            if (preco > 0)
            {
                txtPreco.setText(String.valueOf(preco));
            } else
            {
                txtPreco.setText(String.valueOf(a.getPreco()));
            }
        }
    }

    private boolean verificarArtLinha()
    {
        for (int i = 0; i < ft.size(); i++)
        {
            if (ft.get(i).getRef() == null ? txtCodArtigo.getText() == null : ft.get(i).getRef().equals(txtCodArtigo.getText()))
            {
                JOptionPane.showMessageDialog(this, "Produto já incluido, selecione outro");
                return false;
            }
        }
        return true;
    }

    private void InserirLinha()
    {
        // Atribuição dos valores que vao ser inseridos no vector de Strings que irá ser inserido na tabela

        if (verificarArtLinha())
        {
            int stock = ftDal.verificarStock(txtCodArtigo.getText()); // verificar o stock de artigo
            if (Integer.parseInt(txtQuant.getText()) > 0)
            {
                if (stock - Integer.parseInt(txtQuant.getText()) >= 0)
                {
                    double totalLinha = 0;
                    totalLinha = (Double.parseDouble(txtPreco.getText().trim()) * Integer.parseInt(txtQuant.getText()) * 0.23
                            + Double.parseDouble(txtPreco.getText().trim()) * Integer.parseInt(txtQuant.getText()));
                    String CodArtigo = txtCodArtigo.getText();
                    String designcao = txtDesign.getText();
                    String quant = txtQuant.getText();
                    String preco = txtPreco.getText();
                    String iva = "23";
                    String Total = String.valueOf(totalLinha);
                    totalVenda += totalLinha;
                    txtTotalFact.setText(String.valueOf(totalVenda));

                    //Adicionar ao array de facturas 
                    Factura f = new Factura();
                    f.setRef(CodArtigo);
                    f.setQuant(Integer.parseInt(quant));
                    f.setPreco(Double.parseDouble(preco));
                    f.setIva(Double.parseDouble(iva));
                    ft.add(f);

                    // Atribuir os valores que vao ser impressos na Tabela para cada produto/linha.
                    String[] campos = new String[]
                    {
                        CodArtigo, designcao, quant, preco, iva, Total
                    };
                    modelo.addRow(campos);
                } else
                {
                    JOptionPane.showMessageDialog(rootPane, "Stock insuficiente! stock actual.: " + stock);
                }

            } else
            {
                JOptionPane.showMessageDialog(rootPane, "Quantidade tem que ser maior que 0..!");
            }

        }
    }

    public void removerlinha()
    {
        int row = jTableLinhas.getSelectedRow();

        if (row != -1)
        {
            int accao = JOptionPane.showConfirmDialog(this, "Excluir produto selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (accao == JOptionPane.YES_OPTION)
            {
                totalVenda -= ((ft.get(row).getPreco() * ft.get(row).getQuant()) * 1.23);

                txtTotalFact.setText(String.valueOf(totalVenda));

                ft.remove(jTableLinhas.getSelectedRow());
                modelo.removeRow(row);
            }
        }
    }

    public void imprimir(int numFact)
    {
        try
        {
            ConnectDB conn = new ConnectDB();
            HashMap parametros = new HashMap();
            parametros.put("NumeroFact", numFact);
            JasperPrint jp = JasperFillManager.fillReport("./jasper/Fatura.jasper", parametros, conn.Open());
            JasperViewer jrv = new JasperViewer(jp, false);
            jrv.setVisible(true);
            
        } catch (Exception e)
        {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(FacturaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(FacturaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(FacturaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(FacturaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {

            public void run()
            {
                new FacturaView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLinhas;
    private javax.swing.JComboBox jcbFuncionario;
    private javax.swing.JTextField txtCodArtigo;
    private javax.swing.JTextField txtCodCliente;
    private javax.swing.JTextField txtCodPostal;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtDesign;
    private javax.swing.JTextField txtMorada;
    private javax.swing.JTextField txtNIF;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumVenda;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtQuant;
    private javax.swing.JTextField txtTotalFact;
    // End of variables declaration//GEN-END:variables
}
